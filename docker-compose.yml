version: '3.8'

services:
  # =========================
  # MYSQL DATABASE
  # =========================
  mysql-db:
    image: mysql:8.0
    container_name: mysql-task-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - app-net

  # =========================
  # PHPMYADMIN
  # =========================
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: task-phpmyadmin
    depends_on:
      - mysql-db
    environment:
      PMA_HOST: mysql-db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    networks:
      - app-net

  # =========================
  # NODEJS BACKEND (3 REPLICAS)
  # =========================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
    depends_on:
      - mysql-db
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - app-net

  # =========================
  # REACT FRONTEND (3 REPLICAS)
  # =========================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - app-net

  # =========================
  # NGINX REVERSE PROXY
  # =========================
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    ports:
      - "3001:80"
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  mysql_data:
